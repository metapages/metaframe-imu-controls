{"version":3,"file":"index.2fe5532f.js","sources":["../../../vite/modulepreload-polyfill","../../../src/components/ButtonHelp.tsx","../../../src/components/ButtonOptionsMenu.tsx","../../../src/routes/dial.tsx","../../../src/routes/switch.tsx","../../../src/components/ImageMermaid.tsx","../../../src/routes/home.tsx","../../../src/App.tsx","../../../src/index.tsx"],"sourcesContent":["const p = function polyfill() {\n    const relList = document.createElement('link').relList;\n    if (relList && relList.supports && relList.supports('modulepreload')) {\n        return;\n    }\n    for (const link of document.querySelectorAll('link[rel=\"modulepreload\"]')) {\n        processPreload(link);\n    }\n    new MutationObserver((mutations) => {\n        for (const mutation of mutations) {\n            if (mutation.type !== 'childList') {\n                continue;\n            }\n            for (const node of mutation.addedNodes) {\n                if (node.tagName === 'LINK' && node.rel === 'modulepreload')\n                    processPreload(node);\n            }\n        }\n    }).observe(document, { childList: true, subtree: true });\n    function getFetchOpts(script) {\n        const fetchOpts = {};\n        if (script.integrity)\n            fetchOpts.integrity = script.integrity;\n        if (script.referrerpolicy)\n            fetchOpts.referrerPolicy = script.referrerpolicy;\n        if (script.crossorigin === 'use-credentials')\n            fetchOpts.credentials = 'include';\n        else if (script.crossorigin === 'anonymous')\n            fetchOpts.credentials = 'omit';\n        else\n            fetchOpts.credentials = 'same-origin';\n        return fetchOpts;\n    }\n    function processPreload(link) {\n        if (link.ep)\n            // ep marker = processed\n            return;\n        link.ep = true;\n        // prepopulate the load record\n        const fetchOpts = getFetchOpts(link);\n        fetch(link.href, fetchOpts);\n    }\n};__VITE_IS_MODERN__&&p();","import { FunctionalComponent } from \"preact\";\nimport { useCallback, useState } from \"preact/hooks\";\nimport {\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerBody,\n  IconButton,\n  DrawerCloseButton,\n} from \"@chakra-ui/react\";\nimport { QuestionIcon } from \"@chakra-ui/icons\";\n\nexport const ButtonHelp: FunctionalComponent<{ url?: string }> = ({ url }) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  if (!url) {\n    url = `${window.location.origin}${\n      window.location.pathname.endsWith(\"/\")\n        ? window.location.pathname\n        : window.location.pathname + \"/\"\n    }README.md`;\n  }\n  if (!url.startsWith(\"http\")) {\n    url = `${window.location.origin}${\n      window.location.pathname.endsWith(\"/\")\n        ? window.location.pathname\n        : window.location.pathname + \"/\"\n    }${url}`;\n  }\n\n  const onClick = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <>\n      <IconButton\n        verticalAlign=\"top\"\n        aria-label=\"Help\"\n        // @ts-ignore\n        icon={<QuestionIcon />}\n        size=\"lg\"\n        onClick={onClick}\n        mr=\"4\"\n      />\n      <HelpPanel url={url} isOpen={open} setOpen={setOpen} />\n    </>\n  );\n};\n\nconst HelpPanel: FunctionalComponent<{\n  url: string;\n  isOpen: boolean;\n  setOpen: (open: boolean) => void;\n}> = ({ isOpen, setOpen, url }) => {\n  const onClose = useCallback(() => {\n    setOpen(!isOpen);\n  }, [setOpen, isOpen]);\n\n  const onOverlayClick = useCallback(() => {\n    setOpen(false);\n  }, [setOpen]);\n\n  const iframeUrl = `https://metapages.github.io/metaframe-markdown/#?url=${url}`;\n\n  return (\n    <Drawer\n      size=\"full\"\n      placement=\"top\"\n      onClose={onClose}\n      isOpen={isOpen}\n      onOverlayClick={onOverlayClick}\n    >\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerCloseButton size=\"lg\" bg=\"gray.100\" />\n          <DrawerBody>\n            <iframe width=\"100%\" height=\"100%\" src={iframeUrl} />\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport { useEffect, useState, useCallback } from \"preact/hooks\";\nimport { useHashParamJson } from \"@metapages/metaframe-hook\";\nimport {\n  Box,\n  Drawer,\n  DrawerOverlay,\n  DrawerContent,\n  DrawerHeader,\n  DrawerBody,\n  Grid,\n  GridItem,\n  IconButton,\n  Input,\n  Select,\n  HStack,\n  Switch,\n  Text,\n} from \"@chakra-ui/react\";\nimport { CheckIcon, CloseIcon, SettingsIcon } from \"@chakra-ui/icons\";\n\nexport type OptionType = \"string\" | \"boolean\" | \"option\" | \"number\";\n\nexport type Option = {\n  name: string;\n  displayName: string;\n  default?: string | boolean | number;\n  type?: OptionType; // defaults to string\n  options?: string[];\n  validator?: (val: string | boolean | number) => string | undefined; // undefined == 👍, string is an error message\n  map?: (val: string | boolean | number) => any; // convert value to proper type\n};\n\nexport const ButtonOptionsMenu: FunctionalComponent<{ options: Option[], hashkey?:string }> = ({\n  hashkey,\n  options,\n}) => {\n  const [open, setOpen] = useState<boolean>(false);\n\n  const onClick = useCallback(() => {\n    setOpen(!open);\n  }, [open]);\n\n  return (\n    <>\n      <IconButton\n        verticalAlign=\"top\"\n        aria-label=\"Metaframe settings\"\n        // @ts-ignore\n        icon={<SettingsIcon />}\n        size=\"lg\"\n        onClick={onClick}\n      />\n      <OptionsMenu hashkey={hashkey} isOpen={open} setOpen={setOpen} options={options} />\n    </>\n  );\n};\n\ntype GenericOptions = Record<string, string | boolean | number>;\n\nconst OptionsMenu: FunctionalComponent<{\n  isOpen: boolean;\n  setOpen: (open: boolean) => void;\n  options: Option[];\n  hashkey?:string;\n}> = ({ hashkey, isOpen, setOpen, options }) => {\n  // isOpen = false; // for debugging/developing\n\n  const [optionsInHashParams, setOptionsInHashParams] =\n    useHashParamJson<GenericOptions>(\n      hashkey ? hashkey : \"options\",\n      Object.fromEntries(\n        options\n          .filter((o) => o.default)\n          .map((option) => [option!.name!, option!.default!])\n      )\n    );\n\n  const [localOptions, setLocalOptions] = useState<GenericOptions>(\n    optionsInHashParams || {}\n  );\n  const [errors, setErrors] =\n    useState<Record<string, string> | undefined>(undefined);\n\n  const handleOnChange = useCallback(\n    (event: any) => {\n      const { name, value } = event.target as HTMLInputElement;\n      const option = options.find((o) => o.name === name) as Option; // assume we always find one since we configured it from options\n      // save boolean true as \"1\"\n      if (!option) {\n        console.error(`No option found for name=${name}`);\n        return;\n      }\n      if (option.type === \"boolean\") {\n        setLocalOptions({ ...localOptions, [name]: value === \"1\" });\n      } else {\n        setLocalOptions({ ...localOptions, [name]: value });\n      }\n    },\n    [localOptions, setLocalOptions, options]\n  );\n\n  const onClose = useCallback(() => {\n    setOpen(!isOpen);\n  }, [setOpen, isOpen]);\n\n  const onCloseAndAccept = useCallback(() => {\n    // first validate if available\n    const maybeErrors: Record<string, string> = {};\n    Object.keys(localOptions).forEach((key) => {\n      const option: Option | undefined = options.find((o) => o.name === key);\n      if (option && option.validator && option.type !== \"boolean\") {\n        const errorFromOption = option.validator(localOptions[key] as string);\n        if (errorFromOption) {\n          maybeErrors[key] = errorFromOption;\n        }\n      }\n    });\n    if (Object.keys(maybeErrors).length > 0) {\n      setErrors(maybeErrors);\n      return;\n    }\n    setErrors(undefined);\n\n    // assume valid!\n    // now maybe map to other values\n    const convertedOptions: GenericOptions = {};\n    Object.keys(localOptions).forEach((key) => {\n      const option: Option | undefined = options.find((o) => o.name === key);\n      if (option) {\n        if (option.map) {\n          convertedOptions[key] = option.map(localOptions[key]);\n        } else {\n          if (option.type === \"boolean\") {\n            convertedOptions[key] =\n              localOptions[key] === true ||\n              localOptions[key] === \"1\" ||\n              localOptions[key] === \"true\";\n          } else {\n            convertedOptions[key] = localOptions[key];\n          }\n        }\n      } else {\n        convertedOptions[key] = localOptions[key];\n      }\n    });\n\n    setOpen(!isOpen);\n    setOptionsInHashParams(convertedOptions);\n  }, [\n    setOpen,\n    isOpen,\n    options,\n    localOptions,\n    setOptionsInHashParams,\n    setErrors,\n  ]);\n\n  // preact complains in dev mode if this is moved out of a functional component\n  useEffect(() => {\n    if (!isOpen) {\n      return;\n    }\n    const onKeyup = (e: KeyboardEvent) => {\n      if (e.key === \"Enter\" && isOpen) onCloseAndAccept();\n    };\n    window.addEventListener(\"keyup\", onKeyup);\n    return () => {\n      window.removeEventListener(\"keyup\", onKeyup);\n    };\n  }, [onCloseAndAccept, isOpen]);\n\n  return (\n    <Drawer placement=\"top\" onClose={onCloseAndAccept} isOpen={isOpen}>\n      <DrawerOverlay>\n        <DrawerContent>\n          <DrawerHeader borderBottomWidth=\"0px\">\n            Configure metaframe (stored in URL hash params )\n          </DrawerHeader>\n          <DrawerBody>\n            <Box\n              maxW=\"80%\"\n              p={2}\n              borderWidth=\"4px\"\n              borderRadius=\"lg\"\n              overflow=\"hidden\"\n            >\n              <Grid templateColumns=\"repeat(12, 1fr)\" gap={6}>\n                {options.map((option) => (\n                  <>\n                    <GridItem rowSpan={1} colSpan={4}>\n                      <Box\n                        w=\"100%\"\n                        h=\"100%\"\n                        display=\"flex\"\n                        alignItems=\"center\"\n                        justifyContent=\"flex-end\"\n                      >\n                        <Text textAlign={\"right\"} verticalAlign=\"bottom\">\n                          {option.displayName || option.name}:\n                        </Text>\n                      </Box>\n                    </GridItem>\n                    <GridItem rowSpan={1} colSpan={8}>\n                      {\" \"}\n                      {renderInput(\n                        option,\n                        localOptions[option.name],\n                        handleOnChange\n                      )}\n                    </GridItem>\n                  </>\n                ))}\n\n                <GridItem rowSpan={1} colSpan={12}></GridItem>\n                <GridItem rowSpan={1} colSpan={12}></GridItem>\n                <GridItem rowSpan={1} colSpan={12}></GridItem>\n                <GridItem rowSpan={1} colSpan={10}></GridItem>\n\n                <GridItem rowSpan={0} colSpan={2}>\n                  <HStack spacing={2} justify=\"flex-end\" direction=\"row\">\n                    {/*\n                      // @ts-ignore */}\n                    <IconButton\n                      size=\"lg\"\n                      color=\"red\"\n                      icon={(<CloseIcon />) as any}\n                      onClick={onClose}\n                    />\n\n                    {/*\n                      // @ts-ignore */}\n                    <IconButton\n                      size=\"lg\"\n                      color=\"green\"\n                      icon={(<CheckIcon />) as any}\n                      onClick={onCloseAndAccept}\n                    />\n                  </HStack>\n                </GridItem>\n              </Grid>\n            </Box>\n          </DrawerBody>\n        </DrawerContent>\n      </DrawerOverlay>\n    </Drawer>\n  );\n};\n\nconst renderInput = (option: Option, value: any, onChange: any) => {\n  switch (option.type) {\n    case \"option\":\n      return (\n        <Select\n          name={option.name}\n          value={value}\n          onChange={onChange}\n          placeholder=\"Select option\"\n        >\n          {option.options!.map((optionChoice) => (\n            <option value={optionChoice}>{optionChoice}</option>\n          ))}\n        </Select>\n      );\n    case \"boolean\":\n      return (\n        <Switch\n          name={option.name}\n          // @ts-ignore\n          rightIcon={<CheckIcon />}\n          onChange={onChange}\n          isChecked={value === true || value === \"1\"}\n          value={value ? 0 : 1}\n        />\n      );\n    default:\n      return (\n        <Box w=\"100%\" h=\"10\">\n          <Input\n            name={option.name}\n            type=\"text\"\n            placeholder=\"\"\n            value={value}\n            onInput={onChange}\n          />\n        </Box>\n      );\n  }\n};\n","import { FunctionalComponent } from \"preact\";\nimport { useState, useEffect } from \"preact/hooks\";\nimport { Flex, Spacer } from \"@chakra-ui/react\";\nimport { Basic } from \"react-dial-knob\";\nimport { useMetaframe } from \"@metapages/metaframe-hook\";\nimport { MetaframeInputMap, Metaframe } from \"@metapages/metapage\";\nimport { ButtonHelp } from \"/@/components/ButtonHelp\";\nimport { ButtonOptionsMenu, Option } from \"/@/components/ButtonOptionsMenu\";\n\nconst options: Option[] = [\n  {\n    name: \"min\",\n    displayName: \"A boolean option\",\n    default: true,\n    type: \"boolean\",\n  },\n];\n\nexport const Route: FunctionalComponent = () => {\n  return (\n    <Flex padding=\"2px\">\n      <Flex flexDirection=\"column\">\n        <Dial />\n      </Flex>\n\n      <Spacer />\n      <ButtonOptionsMenu options={options} hashkey=\"dialoptions\" />\n      <ButtonHelp url=\"README-dial.md\" />\n    </Flex>\n  );\n};\n\nexport const Dial: FunctionalComponent = () => {\n  const metaframeObj = useMetaframe();\n  const [value, setValue] = useState(0);\n\n  useEffect(() => {\n    const metaframe = metaframeObj?.metaframe;\n    if (!metaframe) {\n      return;\n    }\n    const onInputs = (inputs: MetaframeInputMap): void => {\n      if (inputs?.[\"o\"]?.[\"pitch\"] !== undefined) {\n        let pitch: number = inputs?.[\"o\"]?.[\"pitch\"];\n        const yaw: number = inputs?.[\"o\"]?.[\"yaw\"];\n        if (pitch > 0 && yaw > 0) {\n          pitch = Math.PI - pitch;\n        }\n        if (pitch < 0 && yaw < 0) {\n          pitch = Math.PI * 2 + pitch;\n        }\n\n        let deg: number = pitch * (180 / Math.PI);\n        if (deg < 0) {\n          deg = 180 - deg;\n        }\n\n        metaframe.setOutput(\"degrees\", deg);\n        metaframe.setOutput(\"radians\", pitch);\n\n        setValue(deg);\n      }\n    };\n    metaframe.onInputs(onInputs);\n    return () => {\n      metaframe.removeListener(Metaframe.INPUTS, onInputs);\n    };\n  }, [metaframeObj, setValue]);\n\n  useEffect(() => {\n    metaframeObj?.metaframe?.setOutput(\"value\", value);\n  }, [value, metaframeObj]);\n\n  return (\n    <Basic\n      diameter={200}\n      min={1}\n      max={360}\n      step={1}\n      value={Math.floor(value)}\n      theme={{\n        defaultColor: \"#333\",\n        activeColor: \"#f33\",\n      }}\n      onValueChange={setValue}\n      //   ariaLabelledBy={\"my-label\"}\n    >\n      {/* <label id={\"my-label\"}>Degrees</label> */}\n    </Basic>\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport { useState, useEffect } from \"preact/hooks\";\nimport {\n  Flex,\n  Spacer,\n  Switch,\n} from \"@chakra-ui/react\";\nimport { useMetaframe } from \"@metapages/metaframe-hook\";\nimport { MetaframeInputMap, Metaframe } from \"@metapages/metapage\";\nimport { ButtonHelp } from \"/@/components/ButtonHelp\";\nimport { ButtonOptionsMenu, Option } from \"/@/components/ButtonOptionsMenu\";\n\nconst options: Option[] = [\n  {\n    name: \"min\",\n    displayName: \"A boolean option\",\n    default: true,\n    type: \"boolean\",\n  },\n];\n\nexport const Route: FunctionalComponent = () => {\n  return (\n    <Flex padding=\"2px\">\n      <Flex flexDirection=\"column\">\n        <SwitchControl />\n      </Flex>\n\n      <Spacer />\n      <ButtonOptionsMenu options={options} hashkey=\"dialoptions\" />\n      <ButtonHelp url=\"README-switch.md\" />\n    </Flex>\n  );\n};\n\nexport const SwitchControl: FunctionalComponent = () => {\n  const metaframeObj = useMetaframe();\n  const [value, setValue] = useState<boolean>(false);\n\n  useEffect(() => {\n    const metaframe = metaframeObj?.metaframe;\n    if (!metaframe) {\n      return;\n    }\n    const onInputs = (inputs: MetaframeInputMap): void => {\n      if (inputs?.[\"o\"]?.[\"pitch\"] !== undefined) {\n        let pitch: number = inputs?.[\"o\"]?.[\"pitch\"];\n        const yaw: number = inputs?.[\"o\"]?.[\"yaw\"];\n        if (pitch > 0 && yaw > 0) {\n          pitch = Math.PI - pitch;\n        }\n        if (pitch < 0 && yaw < 0) {\n          pitch = Math.PI * 2 + pitch;\n        }\n\n        let deg: number = pitch * (180 / Math.PI);\n        if (deg < 0) {\n          deg = 180 - deg;\n        }\n\n        const newValue: boolean = deg > 90;\n\n        metaframe.setOutput(\"switch\", newValue);\n        setValue(newValue);\n      }\n    };\n    metaframe.onInputs(onInputs);\n    return () => {\n      metaframe.removeListener(Metaframe.INPUTS, onInputs);\n    };\n  }, [metaframeObj, setValue]);\n\n  return <Switch size=\"lg\" isChecked={value} />;\n};\n","import { FunctionalComponent } from \"preact\";\nimport { Image, Link } from \"@chakra-ui/react\";\n\nexport const ImageMermaid: FunctionalComponent<{ url: string }> = ({ url }) => {\n  const editableUrl = `${url\n    .replace(\n      \"https://mermaid.ink/img/\",\n      \"https://mermaid-js.github.io/mermaid-live-editor/edit#\"\n    )\n    .replace(\n      \"https://mermaid.ink/svg/\",\n      \"https://mermaid-js.github.io/mermaid-live-editor/edit#\"\n    )}`;\n  return (\n    <Link href={editableUrl}>\n      <Image src={url} />\n    </Link>\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport {\n  Box,\n  Flex,\n  Heading,\n  Image,\n  Link,\n  LinkBox,\n  LinkOverlay,\n  ListItem,\n  Select,\n  SimpleGrid,\n  Spacer,\n  UnorderedList,\n  VStack,\n} from \"@chakra-ui/react\";\nimport { ExternalLinkIcon } from \"@chakra-ui/icons\";\nimport { ButtonHelp } from \"/@/components/ButtonHelp\";\nimport { Link as ReachLink } from \"react-router-dom\";\nimport { useHashParam } from \"@metapages/metaframe-hook\";\nimport { Dial } from \"/@/routes/dial\";\nimport { SwitchControl } from \"/@/routes/switch\";\nimport { ImageMermaid } from \"/@/components/ImageMermaid\";\n\ntype ComponentDescription = {\n  name: string;\n  image: JSX.Element;\n  title: string;\n  description: JSX.Element;\n  object: JSX.Element;\n};\n\nconst components: ComponentDescription[] = [\n  {\n    name: \"dial\",\n    title: \"Dial\",\n    image: (\n      <ImageMermaid\n        url={\n          \"https://mermaid.ink/svg/eyJjb2RlIjoiZ3JhcGggTFJcbiAgaW5wdXRbXCJ7IG86IHsgcm9sbCwgcGl0Y2gsIHlhdyB9ICZlbnNwOyAmZW5zcDtcIl0gLS0-IG1ldGFmcmFtZXtEaWFsfVxuICBtZXRhZnJhbWUgLS0-IHxcIjAgLi4uIDLwnZuRICZlbnNwO1wifCByYWRpYW5zW1wicmFkaWFucyAgXCJdXG4gIG1ldGFmcmFtZSAtLT4gfFwiMCAuLi4gMzYwICZlbnNwO1wifCBkZWdyZWVzW1wiZGVncmVlcyBcIl1cbiAgbWV0YWZyYW1lIC0tPiB8XCJjb25maWd1cmFibGUgMCAuLi4gbiAgJmVuc3A7XCJ8IHZhbHVlW1widmFsdWVcIl0iLCJtZXJtYWlkIjp7InRoZW1lIjoiZGVmYXVsdCJ9LCJ1cGRhdGVFZGl0b3IiOmZhbHNlLCJhdXRvU3luYyI6dHJ1ZSwidXBkYXRlRGlhZ3JhbSI6ZmFsc2V9\"\n        }\n      />\n    ),\n    description: (\n      <div>\n        <UnorderedList>\n          <ListItem>Map one rotation direction to a switch</ListItem>\n          <ListItem>Configurable scaled range (e.g. 1-10, 1-150)</ListItem>\n          <ListItem>Configurable: always start at zero</ListItem>\n          <ListItem>\n            <Link href=\"https://app.metapages.org/#?definition=IntcbiAgXCJ2ZXJzaW9uXCI6IFwiMC4zXCIsXG4gIFwibWV0YVwiOiB7XG4gICAgXCJsYXlvdXRzXCI6IHtcbiAgICAgIFwiZmxleGJveGdyaWRcIjoge1xuICAgICAgICBcImRvY3NcIjogXCJodHRwOi8vZmxleGJveGdyaWQuY29tL1wiLFxuICAgICAgICBcImxheW91dFwiOiBbXG4gICAgICAgICAgW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcIm5hbWVcIjogXCJkaWFsXCIsXG4gICAgICAgICAgICAgIFwid2lkdGhcIjogXCJjb2wteHMtNFwiLFxuICAgICAgICAgICAgICBcInN0eWxlXCI6IHtcbiAgICAgICAgICAgICAgICBcIm1heEhlaWdodFwiOiBcIjYwMHB4XCIsXG4gICAgICAgICAgICAgICAgXCJvdmVyZmxvd1lcIjogXCJoaWRkZW5cIlxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICBcInVybFwiOiBcImh0dHBzOi8vbWV0YXBhZ2VzLm9yZy9tZXRhZnJhbWVzL3Bhc3N0aHJvdWdoLWFycm93Lz9yb3RhdGlvbj05MFwiLFxuICAgICAgICAgICAgICBcIndpZHRoXCI6IFwiY29sLXhzLTFcIlxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgXCJuYW1lXCI6IFwicGxvdFwiLFxuICAgICAgICAgICAgICBcIndpZHRoXCI6IFwiY29sLXhzLTdcIlxuICAgICAgICAgICAgfVxuICAgICAgICAgIF1cbiAgICAgICAgXVxuICAgICAgfVxuICAgIH1cbiAgfSxcbiAgXCJtZXRhZnJhbWVzXCI6IHtcbiAgICBcImRpYWxcIjoge1xuICAgICAgXCJ1cmxcIjogXCJodHRwczovL21ldGFwYWdlcy5naXRodWIuaW8vbWV0YWZyYW1lLWltdS1jb250cm9scy8jP21vZGU9ZGlhbFwiXG4gICAgfSxcbiAgICBcInBsb3RcIjoge1xuICAgICAgXCJ1cmxcIjogXCJodHRwczovL21ldGFwYWdlcy5vcmcvbWV0YWZyYW1lcy9ncmFwaC1keW5hbWljL1wiLFxuICAgICAgXCJpbnB1dHNcIjogW1xuICAgICAgICB7XG4gICAgICAgICAgXCJtZXRhZnJhbWVcIjogXCJkaWFsXCIsXG4gICAgICAgICAgXCJzb3VyY2VcIjogXCJ2YWx1ZVwiLFxuICAgICAgICAgIFwidGFyZ2V0XCI6IFwieVwiXG4gICAgICAgIH1cbiAgICAgIF1cbiAgICB9XG4gIH0sXG4gIFwicGx1Z2luc1wiOiBbXG4gICAgXCJodHRwczovL21ldGFwYWdlcy5naXRodWIuaW8vbWV0YWZyYW1lLWVkaXRvci9cIlxuICBdXG59Ig==\" isExternal>\n              Live example <ExternalLinkIcon mx=\"2px\" />\n            </Link>\n          </ListItem>\n        </UnorderedList>\n      </div>\n    ),\n    object: <Dial />,\n  },\n\n  {\n    name: \"switch\",\n    title: \"Switch\",\n    image: (\n      <ImageMermaid\n        url={\n          \"https://mermaid.ink/svg/eyJjb2RlIjoiZ3JhcGggTFJcbiAgaW5wdXRbXCJ7IG86IHsgcm9sbCwgcGl0Y2gsIHlhdyB9ICZlbnNwOyAmZW5zcDsgXCJdIC0tPiBtZXRhZnJhbWV7RGlhbH1cbiAgbWV0YWZyYW1lIC0tPiB8XCJ0cnVlIHwgZmFsc2UgJmVuc3A7IFwifCBzd2l0Y2hbXCJzd2l0Y2ggIFwiXVxuIiwibWVybWFpZCI6eyJ0aGVtZSI6ImRlZmF1bHQifSwidXBkYXRlRWRpdG9yIjpmYWxzZSwiYXV0b1N5bmMiOnRydWUsInVwZGF0ZURpYWdyYW0iOmZhbHNlfQ\"\n        }\n      />\n    ),\n    description: (\n      <UnorderedList>\n        <ListItem>Map one rotation direction to a dial controller</ListItem>\n      </UnorderedList>\n    ),\n    object: <SwitchControl />,\n  },\n];\n\nexport const Home: FunctionalComponent = () => (\n  <Box w=\"100%\" p={4}>\n    <Flex>\n      <Flex stretch flexDirection=\"column\">\n        <Box w=\"100%\" p={2}>\n          <Heading size=\"md\">Motion to control</Heading>\n        </Box>\n        <Box w=\"10px\" h=\"20px\" />\n\n        {components.map((item, i) => (\n          <WidgetItem key={i} {...item} />\n        ))}\n      </Flex>\n\n      <Spacer />\n      <ButtonHelp />\n    </Flex>\n  </Box>\n);\n\nexport const WidgetItem: FunctionalComponent<ComponentDescription> = ({\n  title,\n  name,\n  image,\n  description,\n  object,\n}) => {\n  const [_, setMode] = useHashParam(\"mode\");\n  return (\n    <Box p=\"5\" borderWidth=\"1px\" rounded=\"md\">\n      <SimpleGrid columns={3} spacing={10}>\n        <Box\n          w=\"100%\"\n          onClick={(e) => {\n            setMode(name, { modifyHistory: true });\n          }}\n        >\n          <Heading size=\"md\" my=\"2\">\n            {title}\n          </Heading>\n          <VStack>{description}</VStack>\n        </Box>\n        {image}\n        <Box w=\"100%\" onClick={() => setMode(name, { modifyHistory: true })}>\n          {object}\n        </Box>\n      </SimpleGrid>\n    </Box>\n  );\n};\n","import { FunctionalComponent } from \"preact\";\nimport { useHashParam } from \"@metapages/metaframe-hook\";\nimport { Home } from \"/@/routes/home\";\nimport { Route as RouteDial } from \"/@/routes/dial\";\nimport { Route as RouteSwitch } from \"/@/routes/switch\";\n\nexport const App: FunctionalComponent = () => {\n  const [mode] = useHashParam(\"mode\");\n\n  switch (mode) {\n    case \"dial\":\n      return <RouteDial />;\n    case \"switch\":\n      return <RouteSwitch />;\n    default:\n      return <Home />;\n  }\n};\n","import { render } from \"preact\";\nimport { WithMetaframe } from \"@metapages/metaframe-hook\";\nimport { ChakraProvider } from \"@chakra-ui/react\";\nimport { App } from \"./App\";\n\nrender(\n  <ChakraProvider>\n    <WithMetaframe>\n      <App />\n    </WithMetaframe>\n  </ChakraProvider>,\n  document.getElementById(\"root\")!\n);\n"],"names":["useState","useCallback","DrawerOverlay","DrawerCloseButton","DrawerBody","DrawerHeader","options","Route","RouteDial","RouteSwitch","render"],"mappings":"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"}